(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.r=function(exports){Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s="./src/index.js")})({"./src/index.js":function(module,exports,__webpack_require__){"use strict";eval("\nfunction calcCheckSum(gstin) {\n    var GSTN_CODEPOINT_CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n    factor = 2,\n    sum = 0,\n    checkCodePoint = 0,\n    mod = GSTN_CODEPOINT_CHARS.length,\n    i;\n\n  for (i = gstin.length - 2; i >= 0; i--) {\n    var codePoint = -1;\n    for (var j = 0; j < GSTN_CODEPOINT_CHARS.length; j++) {\n      if (GSTN_CODEPOINT_CHARS[j] == gstin[i]) {\n        codePoint = j;\n      }\n    }\n    var digit = factor * codePoint;\n    factor = (factor == 2) ? 1 : 2;\n    digit = Math.floor(digit / mod) + (digit % mod);\n    sum += digit;\n  }\n  checkCodePoint = (mod - (sum % mod)) % mod;\n  return GSTN_CODEPOINT_CHARS[checkCodePoint];\n}\n\nfunction validatePattern(gstin) {\n  'use strict';\n  var gstinRegexPattern = /^([0-2][0-9]|[3][0-7])[A-Z]{3}[ABCFGHLJPTK][A-Z]\\d{4}[A-Z][A-Z0-9][Z][A-Z0-9]$/;\n  return gstinRegexPattern.test(gstin); // Regex validation result GSTIN of 15 digits.\n}\n\nfunction isValidGSTNumber(gstin) {\n  gstin = gstin.toUpperCase();\n  if (gstin.length != 15) {\n    return false;\n  }\n  if (validatePattern(gstin)) {\n    return (gstin[14] == calcCheckSum(gstin.toUpperCase()));\n  }\n  return false;\n}\n\n function getInfo(gstin) {\n    var states = [{state_name: 'Andaman and Nicobar Islands', state_code: '35', state_shortcode: 'AN'},\n      {state_name: 'Andhra Pradesh', state_code: '28', state_shortcode: 'AP'},\n      {state_name: 'Andhra Pradesh (New)', state_code: '37', state_shortcode: 'AD'},\n      {state_name: 'Arunachal Pradesh', state_code: '12', state_shortcode: 'AR'},\n      {state_name: 'Assam', state_code: '18', state_shortcode: 'AS'},\n      {state_name: 'Bihar', state_code: '10', state_shortcode: 'BH'},\n      {state_name: 'Chandigarh', state_code: '04', state_shortcode: 'CH'},\n      {state_name: 'Chattisgarh', state_code: '22', state_shortcode: 'CT'},\n      {state_name: 'Dadra and Nagar Haveli', state_code: '26', state_shortcode: 'DN'},\n      {state_name: 'Daman and Diu', state_code: '25', state_shortcode: 'DD'},\n      {state_name: 'Delhi', state_code: '07', state_shortcode: 'DL'},\n      {state_name: 'Goa', state_code: '30', state_shortcode: 'GA'},\n      {state_name: 'Gujarat', state_code: '24', state_shortcode: 'GJ'},\n      {state_name: 'Haryana', state_code: '06', state_shortcode: 'HR'},\n      {state_name: 'Himachal Pradesh', state_code: '02', state_shortcode: 'HP'},\n      {state_name: 'Jammu and Kashmir', state_code: '01', state_shortcode: 'JK'},\n      {state_name: 'Jharkhand', state_code: '20', state_shortcode: 'JH'},\n      {state_name: 'Karnataka', state_code: '29', state_shortcode: 'KA'},\n      {state_name: 'Kerala', state_code: '32', state_shortcode: 'KL'},\n      {state_name: 'Lakshadweep Islands', state_code: '31', state_shortcode: 'LD'},\n      {state_name: 'Madhya Pradesh', state_code: '23', state_shortcode: 'MP'},\n      {state_name: 'Maharashtra', state_code: '27', state_shortcode: 'MH'},\n      {state_name: 'Manipur', state_code: '14', state_shortcode: 'MN'},\n      {state_name: 'Meghalaya', state_code: '17', state_shortcode: 'ME'},\n      {state_name: 'Mizoram', state_code: '15', state_shortcode: 'MI'},\n      {state_name: 'Nagaland', state_code: '13', state_shortcode: 'NL'},\n      {state_name: 'Odisha', state_code: '21', state_shortcode: 'OR'},\n      {state_name: 'Pondicherry', state_code: '34', state_shortcode: 'PY'},\n      {state_name: 'Punjab', state_code: '03', state_shortcode: 'PB'},\n      {state_name: 'Rajasthan', state_code: '08', state_shortcode: 'RJ'},\n      {state_name: 'Sikkim', state_code: '11', state_shortcode: 'SK'},\n      {state_name: 'Tamil Nadu', state_code: '33', state_shortcode: 'TN'},\n      {state_name: 'Telangana', state_code: '36', state_shortcode: 'TS'},\n      {state_name: 'Tripura', state_code: '16', state_shortcode: 'TR'},\n      {state_name: 'Uttar Pradesh', state_code: '09', state_shortcode: 'UP'},\n      {state_name: 'Uttarakhand', state_code: '05', state_shortcode: 'UT'},\n      {state_name: 'West Bengal', state_code: '19', state_shortcode: 'WB'}];\n    var panTypes = [{code: 'C', pan_type: 'Company'},\n      {code: 'P', pan_type: 'Person'},\n      {code: 'H', pan_type: 'HUF (Hindu Undivided Family)'},\n      {code: 'F', pan_type: 'Firm'},\n      {code: 'A', pan_type: 'Association of Persons (AOP)'},\n      {code: 'T', pan_type: 'AOP (Trust)'},\n      {code: 'B', pan_type: 'Body of Individuals (BOI)'},\n      {code: 'L', pan_type: 'Local Authority'},\n      {code: 'J', pan_type: 'Artificial Juridical Person '},\n      {code: 'G', pan_type: 'Government'}];\n\n    var gstin = gstin.toUpperCase();\n\n    if (!isValidGSTNumber(gstin))\n      return 'Invalid GSTIN';\n\n    var state = states.find(o => o.state_code === gstin.slice(0, 2));\n\tvar info_msg = \"The GSTIN \" + gstin + \" is entity #\" + parseInt(gstin.slice(12,13),36) + \" belonging to \" + panTypes.find(o => o.code === gstin[5]).pan_type + \" whose PAN is \" + gstin.slice(2,12) + \" registered in \" + state.state_name + \" (\" + state.state_shortcode + \")\";\n\n\treturn info_msg;\n  }\n\nmodule.exports = {\n  isValidGSTNumber: isValidGSTNumber,\n\n  ValidateGSTIN: function(gstin) {\n\tgstin = gstin.toUpperCase();\n    if (gstin.length != 15) {\n      return 'Enter a valid 15 character GSTIN';\n    }\n    if (!validatePattern(gstin)) {\n      return 'Invalid GSTIN format';\n    } else {\n      if (gstin.toUpperCase()[14] != calcCheckSum(gstin.toUpperCase())) {\n        return 'Invalid checksum character in GSTIN';\n      } else\n        return 'Valid GSTIN';\n    }\n  },\n\n  getGSTINInfo: getInfo\n};\n\n\n//# sourceURL=webpack:///./src/index.js?")}});